/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.TaksiStanica;
import domen.Taksista;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

/**
 *
 * @author BOJAN
 */
public class FrmUnosTaksista extends javax.swing.JFrame {
    
    private final DateFormat dz = new SimpleDateFormat("dd.MM.yyyy");

    /**
     * Creates new form FrmUnosTaksista
     */
    public FrmUnosTaksista() {
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtxtTaksistaID = new javax.swing.JTextField();
        jtxtDatumZaposlenja = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtxtIme = new javax.swing.JTextField();
        jtxtPrezime = new javax.swing.JTextField();
        jtxtKontakt = new javax.swing.JTextField();
        jtxtJMBG = new javax.swing.JTextField();
        jtxtBroj = new javax.swing.JTextField();
        jtxtUlica = new javax.swing.JTextField();
        jcbTaksiStanica = new javax.swing.JComboBox<>();
        btnKreiraj = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Taksiste:");

        jLabel2.setText("Datum zaposlenja:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o taksisti"));

        jLabel3.setText("Ime:");

        jLabel4.setText("Prezime:");

        jLabel5.setText("Kontakt:");

        jLabel6.setText("JMBG:");

        jLabel7.setText("Ulica:");

        jLabel8.setText("Broj:");

        jLabel9.setText("Taksi stanica:");

        jcbTaksiStanica.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbTaksiStanica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtUlica, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtKontakt, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtJMBG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtKontakt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtUlica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbTaksiStanica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnKreiraj.setText("Kreiraj novog taksistu");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sa\u010Duvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtxtTaksistaID, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                    .addComponent(jtxtDatumZaposlenja))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnKreiraj))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnSacuvaj)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jtxtTaksistaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtxtDatumZaposlenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnKreiraj)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        try{
        Date datumZaposlenja;
        
        if (jtxtDatumZaposlenja.getText().trim().equals("")) {
            datumZaposlenja = new Date();
        } else {
       
            try {
                dz.parse(jtxtDatumZaposlenja.getText().trim());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Format datuma neispravan (dd.MM.yyyy)", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            
            datumZaposlenja = dz.parse(jtxtDatumZaposlenja.getText().trim());
        
            if (datumZaposlenja.after(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum ne sme biti posle sada\u0161njeg", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        Taksista t = new Taksista(-1, datumZaposlenja, " ", " ", " ", " ", " ", " ", 0.0, new TaksiStanica());
       
        TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
        toZahtev.setOperacija(Konstante.KREIRAJ_TAKSISTU);
        toZahtev.setParametar(t);
        Komunikacija.getInstance().posaljiZahtev(toZahtev);
        TransferObjekatOdgovor toOdgovor = Komunikacija.getInstance().primiOdgovor();
         
         int id = (int) toOdgovor.getRezultat();
         
         if (id==0) {
             JOptionPane.showMessageDialog(this, "Sistem ne mo\u017Ee da kreira taksistu!", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
         } else {
         
         jtxtTaksistaID.setText(String.valueOf(id));
         jtxtDatumZaposlenja.setText(dz.format(datumZaposlenja));
         
         
         jtxtDatumZaposlenja.setEditable(false);
        
        JOptionPane.showMessageDialog(this, "Sistem je kreirao novog taksistu.");
         }
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(this, ex);
        
        }
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        try {
            
            if (jtxtIme.getText().trim().equals("") || jtxtPrezime.getText().trim().equals("") || jtxtJMBG.getText().trim().equals("") || jtxtKontakt.getText().trim().equals("") ||
               jtxtUlica.getText().trim().equals("") || jtxtBroj.getText().trim().equals("")){
                
                JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
             try {
                Long.parseLong(jtxtJMBG.getText().trim());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "JMBG mora biti broj", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
                return;
            }
           
          
            if (jtxtJMBG.getText().trim().length()!=13) {
                JOptionPane.showMessageDialog(this, "JMBG mora imati 13 cifara", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            int id = Integer.parseInt(jtxtTaksistaID.getText().trim());
           
            String ime = jtxtIme.getText().trim();
            String prezime = jtxtPrezime.getText().trim();
            Date datumZaposlenja = dz.parse(jtxtDatumZaposlenja.getText().trim());
            String jmbg = jtxtJMBG.getText().trim();
            String kontakt = jtxtKontakt.getText().trim();
            String ulica = jtxtUlica.getText().trim();
            String broj = jtxtBroj.getText().trim();
            
            TaksiStanica stanica = (TaksiStanica) jcbTaksiStanica.getSelectedItem();
            
            Taksista t = new Taksista(id, datumZaposlenja, ime, prezime, jmbg, kontakt, ulica, broj, 0.0, stanica);
            
         TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
         toZahtev.setOperacija(Konstante.ZAPAMTI_TAKSISTU);
         toZahtev.setParametar(t);
         Komunikacija.getInstance().posaljiZahtev(toZahtev);
         TransferObjekatOdgovor toOdgovor = Komunikacija.getInstance().primiOdgovor();
        
         boolean sacuvano = (boolean) toOdgovor.getRezultat();
         
         if (sacuvano) {
             
             JOptionPane.showMessageDialog(this, "Sistem je zapamtio taksistu.");
             isprazniPolja();
         } else {
             JOptionPane.showMessageDialog(this, "Sistem ne mo\u017Ee da zapamti taksistu!", "Gre\u0161ka", JOptionPane.ERROR_MESSAGE);
         }
            
            
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUnosTaksista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUnosTaksista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUnosTaksista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUnosTaksista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUnosTaksista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<Object> jcbTaksiStanica;
    private javax.swing.JTextField jtxtBroj;
    private javax.swing.JTextField jtxtDatumZaposlenja;
    private javax.swing.JTextField jtxtIme;
    private javax.swing.JTextField jtxtJMBG;
    private javax.swing.JTextField jtxtKontakt;
    private javax.swing.JTextField jtxtPrezime;
    private javax.swing.JTextField jtxtTaksistaID;
    private javax.swing.JTextField jtxtUlica;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        jtxtTaksistaID.setEditable(false);
        
        try {
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_TAKSI_STANICE);
            Komunikacija.getInstance().posaljiZahtev(toZahtev);
            TransferObjekatOdgovor toOdgovor = Komunikacija.getInstance().primiOdgovor();
            
            if (toOdgovor.getIzuzetak() != null) {
                throw (Exception) toOdgovor.getIzuzetak();
            }
            
            
            
            List<TaksiStanica> ts = (List<TaksiStanica>) toOdgovor.getRezultat();
            jcbTaksiStanica.removeAllItems();
            
            for (TaksiStanica t: ts) {
                jcbTaksiStanica.addItem(t);
            }
        } catch (Exception ex) {
            Logger.getLogger(FrmUnosTaksista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void isprazniPolja() {
        jtxtTaksistaID.setText("");
        jtxtDatumZaposlenja.setText("");
        jtxtDatumZaposlenja.setEditable(true);
        jtxtIme.setText("");
        jtxtPrezime.setText("");
        jtxtJMBG.setText("");
        jtxtKontakt.setText("");
        jtxtUlica.setText("");
        jtxtBroj.setText(""); 
        jcbTaksiStanica.setSelectedIndex(0);
    }


}

